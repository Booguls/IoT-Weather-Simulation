[
    {
        "id": "9a466af6e3c89abb",
        "type": "subflow",
        "name": "Generate Sensor Data V2",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "2752f0c14251311f"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "e28b7561392b46c9",
        "type": "mongodb3 in",
        "z": "9a466af6e3c89abb",
        "service": "_ext_",
        "configNode": "e88de922c5673edf",
        "name": "Retrieve Document",
        "collection": "test",
        "operation": "findOne",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "bc310ce196b686ed"
            ]
        ]
    },
    {
        "id": "2752f0c14251311f",
        "type": "function",
        "z": "9a466af6e3c89abb",
        "name": "Retrieve Data",
        "func": "var newMsg = {};\nnewMsg.payload = [\n    {\"ID\": msg.payload}\n];\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            [
                "e28b7561392b46c9"
            ]
        ]
    },
    {
        "id": "bc310ce196b686ed",
        "type": "function",
        "z": "9a466af6e3c89abb",
        "name": "Update Data",
        "func": "const AVG_COOLING_BY_CLOUDS = 9;\nconst AVG_SPRING_TEMP = 67;\nconst AVG_SUMMER_TEMP = 83;\nconst AVG_FALL_TEMP = 72;\nconst AVG_WINTER_TEMP = 56\nconst HIGHEST_WIND_SPEED = 6;\nconst MAX_HUMIDITY_EFFECT = 6;\n\nvar updateDoc = {};\nupdateDoc.ID = msg.payload.ID;\nupdateDoc.Temperature = null;\nupdateDoc.Cloudy = Math.random().toFixed(2) * AVG_COOLING_BY_CLOUDS;\nupdateDoc.Season = Math.floor(Math.random() * 4 + 1);\nupdateDoc.Humidity = (Math.random().toFixed(2) * 2 - 1) * MAX_HUMIDITY_EFFECT;\nupdateDoc.WindSpeed = Math.floor(Math.random() * HIGHEST_WIND_SPEED + 1);\nupdateDoc.Date = new Date();\n\nvar currentTemp = 0;\nswitch(updateDoc.Season) {\n    case 1:\n        currentTemp = AVG_SPRING_TEMP;\n        break;\n    case 2:\n        currentTemp = AVG_SUMMER_TEMP;\n        break;\n    case 3:\n        currentTemp = AVG_FALL_TEMP;\n        break;\n    case 4:\n        currentTemp = AVG_WINTER_TEMP;\n        break;\n}\n\ncurrentTemp -= updateDoc.Cloudy;\ncurrentTemp -= updateDoc.WindSpeed;\ncurrentTemp += updateDoc.Humidity;\n\nif(currentTemp < 65) {\n    updateDoc.Temperature = \"COLD\";\n}\nelse if(currentTemp < 77) {\n    updateDoc.Temperature = \"MODERATE\";\n}\nelse {\n    updateDoc.Temperature = \"HOT\";\n}\n\nmsg.payload = [\n    {\"ID\": updateDoc.ID}, \n    {\"$push\": \n        {\n            Temperature: updateDoc.Temperature, \n            Date: updateDoc.Date, \n            Humidity: updateDoc.Humidity, \n            Cloudy: updateDoc.Cloudy, \n            Season: updateDoc.Season,\n            WindSpeed: updateDoc.WindSpeed\n        }\n    }\n];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 200,
        "wires": [
            [
                "94fa0ccbb425ec57"
            ]
        ]
    },
    {
        "id": "94fa0ccbb425ec57",
        "type": "mongodb3 in",
        "z": "9a466af6e3c89abb",
        "service": "_ext_",
        "configNode": "e88de922c5673edf",
        "name": "Update Document",
        "collection": "test",
        "operation": "findOneAndUpdate",
        "x": 210,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "45edd55bf12ebbee",
        "type": "tab",
        "label": "Flow 5",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ed0ed003c163d752",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "c9bf05c64a12ac87"
            ]
        ]
    },
    {
        "id": "c9bf05c64a12ac87",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Fill Collection",
        "func": "var jsonTemplate = {\n    \"State\": \"California\",\n    \"City\": \"Los Angeles\",\n    \"ID\": null,\n    \"X\": null,\n    \"Y\": null,\n    \"Date\": [],\n    \"Temperature\": [],\n    \"Cloudy\": [],\n    \"Season\": [],\n    \"Humidity\": [],\n    \"WindSpeed\": [],\n    \"Neighbors\": []\n};\nvar GRID_X = 5;\nvar GRID_Y = 5;\nmsg.payload = [];\nvar docs = [];\n\nfor(let i = 0; i < GRID_X; i++) {\n    for(let j = 0; j < GRID_Y; j++) {\n        let initialCondition = JSON.parse(JSON.stringify(jsonTemplate));\n        initialCondition.X = i;\n        initialCondition.Y = j;\n        initialCondition.ID = (i*GRID_X)+j;\n        if(i - 1 >= 0) {\n            initialCondition.Neighbors.push(initialCondition.ID - GRID_X);\n        }\n        if(i + 1 < GRID_X) {\n            initialCondition.Neighbors.push(initialCondition.ID + GRID_X);\n        }\n        if(j - 1 >= 0) {\n            initialCondition.Neighbors.push(initialCondition.ID - 1);\n        }\n        if(j + 1 < GRID_Y) {\n            initialCondition.Neighbors.push(initialCondition.ID + 1);\n        }\n        docs.push(initialCondition);\n    }\n}\n\nmsg.payload.push(docs);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 120,
        "wires": [
            [
                "1bd0ead114a1cf06"
            ]
        ]
    },
    {
        "id": "1bd0ead114a1cf06",
        "type": "mongodb3 in",
        "z": "45edd55bf12ebbee",
        "service": "_ext_",
        "configNode": "e88de922c5673edf",
        "name": "To DB",
        "collection": "test",
        "operation": "insertMany",
        "x": 490,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "6f41db2f20bd888e",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 280,
        "wires": [
            [
                "03279018f78b1e86"
            ]
        ]
    },
    {
        "id": "03279018f78b1e86",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 280,
        "wires": [
            [
                "5365a9744697749f"
            ]
        ]
    },
    {
        "id": "c185c0ec63b4217e",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Automatic Execute",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "x": 220,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a634a5fb9796e240",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 215,
        "y": 320,
        "wires": [
            [
                "03279018f78b1e86"
            ]
        ]
    },
    {
        "id": "698de895ab8b7181",
        "type": "link out",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "a634a5fb9796e240",
            "f87dbe7c429c396f",
            "e2c462bc7bfa9947",
            "f6a115807c333b82",
            "2ab2fdf9977e49d2",
            "22c389c284a2598d",
            "b0030e49e804f542",
            "88b8dd44921711b7",
            "7758f28131833998",
            "e0ec78550a21d48b",
            "2122b03d8846040f",
            "9f667e1edf9c2c45",
            "438c17161d66099b",
            "a354080f5a3d6953",
            "6ef6c6bc9990edde",
            "ee24abb088b9242b",
            "dc4a2304200f39d7",
            "cafb518554b6511f",
            "6e296caae247c4b2",
            "ac77a048c7c7a8ad",
            "0b3844c4619302bb",
            "93922726c3be8fd1",
            "a5e081dca91192ae",
            "3891474303b64505",
            "275b43044a27f785",
            "66457037f0a6e9b9",
            "b980f60895a481b2",
            "8443b5862324ab24",
            "3e67d9703c02bbd3",
            "7ddcc98daa3ace86",
            "951b4214f95bd4c3",
            "96a67995618510a3",
            "1ee21f0666c89707",
            "bc58c33ae6af8a74",
            "95390f36f3f9eba0",
            "49eaad4649b7b023",
            "d0d3c9a6011e810c",
            "dfc840d7a31c5756",
            "f5f0cdb1900ab838",
            "3cdd9fe9c2ee1e18",
            "1a117cc66b4eb12d",
            "be1cf3de59cf94ea",
            "4bca371448adb87b",
            "d50b913ff1e6b726",
            "2cca4552f3aa7150"
        ],
        "x": 375,
        "y": 220,
        "wires": []
    },
    {
        "id": "5365a9744697749f",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 410,
        "y": 320,
        "wires": []
    },
    {
        "id": "f19dd0edd3c4b802",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 360,
        "wires": [
            [
                "9e33068d891af37a"
            ]
        ]
    },
    {
        "id": "9e33068d891af37a",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 360,
        "wires": [
            [
                "f34b81171d57c7b4"
            ]
        ]
    },
    {
        "id": "f87dbe7c429c396f",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 215,
        "y": 400,
        "wires": [
            [
                "9e33068d891af37a"
            ]
        ]
    },
    {
        "id": "f34b81171d57c7b4",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 410,
        "y": 400,
        "wires": []
    },
    {
        "id": "fc74a429b01949e1",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 440,
        "wires": [
            [
                "a80d091a6c19e5fa"
            ]
        ]
    },
    {
        "id": "a80d091a6c19e5fa",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 440,
        "wires": [
            [
                "d9fe2c88bfeccdaa"
            ]
        ]
    },
    {
        "id": "e2c462bc7bfa9947",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 215,
        "y": 480,
        "wires": [
            [
                "a80d091a6c19e5fa"
            ]
        ]
    },
    {
        "id": "d9fe2c88bfeccdaa",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 410,
        "y": 480,
        "wires": []
    },
    {
        "id": "b810a91a6888e565",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 520,
        "wires": [
            [
                "402104fda314ebaa"
            ]
        ]
    },
    {
        "id": "402104fda314ebaa",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 3;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 520,
        "wires": [
            [
                "113251e1cc8f1470"
            ]
        ]
    },
    {
        "id": "f6a115807c333b82",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 215,
        "y": 560,
        "wires": [
            [
                "402104fda314ebaa"
            ]
        ]
    },
    {
        "id": "113251e1cc8f1470",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 410,
        "y": 560,
        "wires": []
    },
    {
        "id": "20df2a54f6b21e6b",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 600,
        "wires": [
            [
                "df212d86ed958e4e"
            ]
        ]
    },
    {
        "id": "df212d86ed958e4e",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 4;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 600,
        "wires": [
            [
                "c2909314c049a6a1"
            ]
        ]
    },
    {
        "id": "2ab2fdf9977e49d2",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 215,
        "y": 640,
        "wires": [
            [
                "df212d86ed958e4e"
            ]
        ]
    },
    {
        "id": "c2909314c049a6a1",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 410,
        "y": 640,
        "wires": []
    },
    {
        "id": "5df9932ffae4b7f9",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 680,
        "wires": [
            [
                "d39b431b0536e22b"
            ]
        ]
    },
    {
        "id": "d39b431b0536e22b",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 5;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 680,
        "wires": [
            [
                "f97f2272a5f37085"
            ]
        ]
    },
    {
        "id": "22c389c284a2598d",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 215,
        "y": 720,
        "wires": [
            [
                "d39b431b0536e22b"
            ]
        ]
    },
    {
        "id": "f97f2272a5f37085",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 410,
        "y": 720,
        "wires": []
    },
    {
        "id": "c2eb3b01602c750a",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 760,
        "wires": [
            [
                "4c5ea0dec42c2a5e"
            ]
        ]
    },
    {
        "id": "4c5ea0dec42c2a5e",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 6;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 760,
        "wires": [
            [
                "81fcbca1394801a1"
            ]
        ]
    },
    {
        "id": "b0030e49e804f542",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 215,
        "y": 800,
        "wires": [
            [
                "4c5ea0dec42c2a5e"
            ]
        ]
    },
    {
        "id": "81fcbca1394801a1",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 410,
        "y": 800,
        "wires": []
    },
    {
        "id": "d818c8d6310a4616",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 840,
        "wires": [
            [
                "2a04782158ca0b40"
            ]
        ]
    },
    {
        "id": "2a04782158ca0b40",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 7;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 840,
        "wires": [
            [
                "9baaeeb6a4f82cc1"
            ]
        ]
    },
    {
        "id": "88b8dd44921711b7",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 215,
        "y": 880,
        "wires": [
            [
                "2a04782158ca0b40"
            ]
        ]
    },
    {
        "id": "9baaeeb6a4f82cc1",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 410,
        "y": 880,
        "wires": []
    },
    {
        "id": "6af23b1589abed52",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 920,
        "wires": [
            [
                "a41109ce73689db3"
            ]
        ]
    },
    {
        "id": "a41109ce73689db3",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 8;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 920,
        "wires": [
            [
                "dee67b1e9864ea55"
            ]
        ]
    },
    {
        "id": "7758f28131833998",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 215,
        "y": 960,
        "wires": [
            [
                "a41109ce73689db3"
            ]
        ]
    },
    {
        "id": "dee67b1e9864ea55",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 410,
        "y": 960,
        "wires": []
    },
    {
        "id": "44252102876f8992",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 180,
        "y": 1000,
        "wires": [
            [
                "9075be1849a26480"
            ]
        ]
    },
    {
        "id": "9075be1849a26480",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 9;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1000,
        "wires": [
            [
                "413445bd4294adce"
            ]
        ]
    },
    {
        "id": "e0ec78550a21d48b",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 215,
        "y": 1040,
        "wires": [
            [
                "9075be1849a26480"
            ]
        ]
    },
    {
        "id": "413445bd4294adce",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 410,
        "y": 1040,
        "wires": []
    },
    {
        "id": "27e4b3a00e8a0ad4",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 640,
        "y": 280,
        "wires": [
            [
                "2cd26a8284068bf5"
            ]
        ]
    },
    {
        "id": "2cd26a8284068bf5",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 10;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 280,
        "wires": [
            [
                "adcc06070e707e30"
            ]
        ]
    },
    {
        "id": "66457037f0a6e9b9",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 675,
        "y": 320,
        "wires": [
            [
                "2cd26a8284068bf5"
            ]
        ]
    },
    {
        "id": "adcc06070e707e30",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 870,
        "y": 320,
        "wires": []
    },
    {
        "id": "b8736193bfa4d621",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 640,
        "y": 360,
        "wires": [
            [
                "6905e173a7a47568"
            ]
        ]
    },
    {
        "id": "6905e173a7a47568",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 11;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 360,
        "wires": [
            [
                "27a860b249cce795"
            ]
        ]
    },
    {
        "id": "b980f60895a481b2",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 675,
        "y": 400,
        "wires": [
            [
                "6905e173a7a47568"
            ]
        ]
    },
    {
        "id": "27a860b249cce795",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 870,
        "y": 400,
        "wires": []
    },
    {
        "id": "f6d4dec654c7184a",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 640,
        "y": 440,
        "wires": [
            [
                "4871a97824cc4eef"
            ]
        ]
    },
    {
        "id": "4871a97824cc4eef",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 12;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 440,
        "wires": [
            [
                "c26bc41f7feea733"
            ]
        ]
    },
    {
        "id": "8443b5862324ab24",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 675,
        "y": 480,
        "wires": [
            [
                "4871a97824cc4eef"
            ]
        ]
    },
    {
        "id": "c26bc41f7feea733",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 870,
        "y": 480,
        "wires": []
    },
    {
        "id": "15425628cd264f23",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 640,
        "y": 520,
        "wires": [
            [
                "d585a59ae0107163"
            ]
        ]
    },
    {
        "id": "d585a59ae0107163",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 13;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 520,
        "wires": [
            [
                "4313c0cb241e8b1c"
            ]
        ]
    },
    {
        "id": "3e67d9703c02bbd3",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 675,
        "y": 560,
        "wires": [
            [
                "d585a59ae0107163"
            ]
        ]
    },
    {
        "id": "4313c0cb241e8b1c",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 870,
        "y": 560,
        "wires": []
    },
    {
        "id": "ec68ad77395cd4e0",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 640,
        "y": 600,
        "wires": [
            [
                "9ad6f4c1c9a2bec7"
            ]
        ]
    },
    {
        "id": "9ad6f4c1c9a2bec7",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 14;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 600,
        "wires": [
            [
                "510491279171b979"
            ]
        ]
    },
    {
        "id": "7ddcc98daa3ace86",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 675,
        "y": 640,
        "wires": [
            [
                "9ad6f4c1c9a2bec7"
            ]
        ]
    },
    {
        "id": "510491279171b979",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 870,
        "y": 640,
        "wires": []
    },
    {
        "id": "721c1147a546f6d8",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 640,
        "y": 680,
        "wires": [
            [
                "06abf981de292f06"
            ]
        ]
    },
    {
        "id": "06abf981de292f06",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 15;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 680,
        "wires": [
            [
                "d6a8564482dd6185"
            ]
        ]
    },
    {
        "id": "951b4214f95bd4c3",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 675,
        "y": 720,
        "wires": [
            [
                "06abf981de292f06"
            ]
        ]
    },
    {
        "id": "d6a8564482dd6185",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 870,
        "y": 720,
        "wires": []
    },
    {
        "id": "4cfd53fb652a5f80",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 640,
        "y": 760,
        "wires": [
            [
                "f64339dd4a855ed0"
            ]
        ]
    },
    {
        "id": "f64339dd4a855ed0",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 16;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 760,
        "wires": [
            [
                "02c8d610e7602e59"
            ]
        ]
    },
    {
        "id": "96a67995618510a3",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 675,
        "y": 800,
        "wires": [
            [
                "f64339dd4a855ed0"
            ]
        ]
    },
    {
        "id": "02c8d610e7602e59",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 870,
        "y": 800,
        "wires": []
    },
    {
        "id": "77c166d0f0fac311",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 640,
        "y": 840,
        "wires": [
            [
                "e73b8450410fc71d"
            ]
        ]
    },
    {
        "id": "e73b8450410fc71d",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 17;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 840,
        "wires": [
            [
                "c5fc3f30d35ff385"
            ]
        ]
    },
    {
        "id": "1ee21f0666c89707",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 675,
        "y": 880,
        "wires": [
            [
                "e73b8450410fc71d"
            ]
        ]
    },
    {
        "id": "c5fc3f30d35ff385",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 870,
        "y": 880,
        "wires": []
    },
    {
        "id": "242b2b6ce7e31503",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 640,
        "y": 920,
        "wires": [
            [
                "bd884464b9685d57"
            ]
        ]
    },
    {
        "id": "bd884464b9685d57",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 18;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 920,
        "wires": [
            [
                "55438c2ed6fc2d5d"
            ]
        ]
    },
    {
        "id": "bc58c33ae6af8a74",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 675,
        "y": 960,
        "wires": [
            [
                "bd884464b9685d57"
            ]
        ]
    },
    {
        "id": "55438c2ed6fc2d5d",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 870,
        "y": 960,
        "wires": []
    },
    {
        "id": "6827c087b34a6bf4",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 640,
        "y": 1000,
        "wires": [
            [
                "46fa3d02add42056"
            ]
        ]
    },
    {
        "id": "46fa3d02add42056",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 19;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1000,
        "wires": [
            [
                "e564946da89e4623"
            ]
        ]
    },
    {
        "id": "95390f36f3f9eba0",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 675,
        "y": 1040,
        "wires": [
            [
                "46fa3d02add42056"
            ]
        ]
    },
    {
        "id": "e564946da89e4623",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 870,
        "y": 1040,
        "wires": []
    },
    {
        "id": "0b1491ec108bdc2c",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1100,
        "y": 280,
        "wires": [
            [
                "1509674712ba88f0"
            ]
        ]
    },
    {
        "id": "1509674712ba88f0",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 20;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 280,
        "wires": [
            [
                "01498f4dbccaeee4"
            ]
        ]
    },
    {
        "id": "49eaad4649b7b023",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 1135,
        "y": 320,
        "wires": [
            [
                "1509674712ba88f0"
            ]
        ]
    },
    {
        "id": "01498f4dbccaeee4",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 1330,
        "y": 320,
        "wires": []
    },
    {
        "id": "439d9e02e542af06",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1100,
        "y": 360,
        "wires": [
            [
                "0fb55db174cd84be"
            ]
        ]
    },
    {
        "id": "0fb55db174cd84be",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 21;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 360,
        "wires": [
            [
                "b7eea727922734ba"
            ]
        ]
    },
    {
        "id": "d0d3c9a6011e810c",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 1135,
        "y": 400,
        "wires": [
            [
                "0fb55db174cd84be"
            ]
        ]
    },
    {
        "id": "b7eea727922734ba",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 1330,
        "y": 400,
        "wires": []
    },
    {
        "id": "b0b463139d1474ae",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1100,
        "y": 440,
        "wires": [
            [
                "ad1d3e9a0826708b"
            ]
        ]
    },
    {
        "id": "ad1d3e9a0826708b",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 22;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 440,
        "wires": [
            [
                "a3529e7f6cc48736"
            ]
        ]
    },
    {
        "id": "dfc840d7a31c5756",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 1135,
        "y": 480,
        "wires": [
            [
                "ad1d3e9a0826708b"
            ]
        ]
    },
    {
        "id": "a3529e7f6cc48736",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 1330,
        "y": 480,
        "wires": []
    },
    {
        "id": "eca52af0e63ddf47",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1100,
        "y": 520,
        "wires": [
            [
                "c1979edfcda44f7a"
            ]
        ]
    },
    {
        "id": "c1979edfcda44f7a",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 23;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 520,
        "wires": [
            [
                "0c7fe1fb25a843cf"
            ]
        ]
    },
    {
        "id": "f5f0cdb1900ab838",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 1135,
        "y": 560,
        "wires": [
            [
                "c1979edfcda44f7a"
            ]
        ]
    },
    {
        "id": "0c7fe1fb25a843cf",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 1330,
        "y": 560,
        "wires": []
    },
    {
        "id": "62fb936e369957de",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1100,
        "y": 600,
        "wires": [
            [
                "18508d59d518bb43"
            ]
        ]
    },
    {
        "id": "18508d59d518bb43",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Send ID as Payload",
        "func": "msg.payload = 24;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 600,
        "wires": [
            [
                "7336718a7a9894cb"
            ]
        ]
    },
    {
        "id": "3cdd9fe9c2ee1e18",
        "type": "link in",
        "z": "45edd55bf12ebbee",
        "name": "",
        "links": [
            "698de895ab8b7181"
        ],
        "x": 1135,
        "y": 640,
        "wires": [
            [
                "18508d59d518bb43"
            ]
        ]
    },
    {
        "id": "7336718a7a9894cb",
        "type": "subflow:9a466af6e3c89abb",
        "z": "45edd55bf12ebbee",
        "name": "",
        "env": [],
        "x": 1330,
        "y": 640,
        "wires": []
    },
    {
        "id": "7877f8d9a7afce84",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Clean Data",
        "func": "var formattedData = [];\nvar dataTemplate = {\n    \"Humidity\": null,\n    \"Season\": null,\n    \"WindSpeed\": null,\n    \"Cloudy\": null,\n    \"Temperature\": null\n};\n\nfor(let objIndex = 0; objIndex < msg.payload.length; objIndex++) {\n    for(let i = 0; i < msg.payload[objIndex].Temperature.length; i++) {\n        let row = JSON.parse(JSON.stringify(dataTemplate));\n        row.Temperature = msg.payload[objIndex].Temperature[i];\n        row.Cloudy = msg.payload[objIndex].Cloudy[i];\n        row.WindSpeed = msg.payload[objIndex].WindSpeed[i];\n        row.Season = msg.payload[objIndex].Season[i];\n        row.Humidity = msg.payload[objIndex].Humidity[i];\n        formattedData.push(row);\n    }\n}\n\nmsg.payload = formattedData;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1120,
        "wires": [
            [
                "51798feeedbe2286"
            ]
        ]
    },
    {
        "id": "bee69237d609072c",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 180,
        "y": 1120,
        "wires": [
            [
                "b1f78e2518feb249"
            ]
        ]
    },
    {
        "id": "b1f78e2518feb249",
        "type": "mongodb in",
        "z": "45edd55bf12ebbee",
        "mongodb": "8c62a4edb3fcdfcf",
        "name": "Copy All Sensor Data",
        "collection": "test",
        "operation": "find",
        "x": 360,
        "y": 1120,
        "wires": [
            [
                "7877f8d9a7afce84"
            ]
        ]
    },
    {
        "id": "51798feeedbe2286",
        "type": "csv",
        "z": "45edd55bf12ebbee",
        "name": "Create DATA File",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Season,Cloudy,Humidity,WindSpeed,Temperature",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 770,
        "y": 1120,
        "wires": [
            [
                "c526d9652be94b29"
            ]
        ]
    },
    {
        "id": "c526d9652be94b29",
        "type": "file",
        "z": "45edd55bf12ebbee",
        "name": "Save DATA File",
        "filename": "C:\\Users\\Kevin Ramirez\\Desktop\\Master's Notes\\Fault Tolerant Systems\\IoT Project\\test2\\Test.data",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 980,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "c099ebef4ded20b8",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 1180,
        "wires": [
            [
                "f2eeb3a35569394b"
            ]
        ]
    },
    {
        "id": "f2eeb3a35569394b",
        "type": "create dataset",
        "z": "45edd55bf12ebbee",
        "name": "",
        "path": "C:\\Users\\Kevin Ramirez\\Desktop\\Master's Notes\\Fault Tolerant Systems\\IoT Project\\test2\\Test.data",
        "saveFolder": "C:\\Users\\Kevin Ramirez\\Desktop\\Master's Notes\\Fault Tolerant Systems\\IoT Project\\test2",
        "saveName": "dataset",
        "input": "0,1,2,3",
        "output": "4",
        "trainingPartition": "",
        "shuffle": true,
        "seed": "",
        "x": 340,
        "y": 1180,
        "wires": [
            [
                "ad03f34932cea6f7"
            ]
        ]
    },
    {
        "id": "ad03f34932cea6f7",
        "type": "debug",
        "z": "45edd55bf12ebbee",
        "name": "Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 1180,
        "wires": []
    },
    {
        "id": "4c4d28c80c10941e",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 1240,
        "wires": [
            [
                "e9177c54e4327e33"
            ]
        ]
    },
    {
        "id": "e9177c54e4327e33",
        "type": "load dataset",
        "z": "45edd55bf12ebbee",
        "name": "",
        "datasetFolder": "C:\\Users\\Kevin Ramirez\\Desktop\\Master's Notes\\Fault Tolerant Systems\\IoT Project\\test2",
        "datasetName": "dataset",
        "partition": "train.csv",
        "input": true,
        "output": true,
        "x": 330,
        "y": 1240,
        "wires": [
            [
                "73ef5687f81eb3bd"
            ],
            [
                "dcdc50cd381a59ab"
            ]
        ]
    },
    {
        "id": "5a50c7c818b3e805",
        "type": "debug",
        "z": "45edd55bf12ebbee",
        "name": "Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1240,
        "wires": []
    },
    {
        "id": "dcdc50cd381a59ab",
        "type": "debug",
        "z": "45edd55bf12ebbee",
        "name": "Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 1300,
        "wires": []
    },
    {
        "id": "d4357aec6de140aa",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "Execute",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 1480,
        "wires": [
            [
                "b2d2ddc0ae4dc32a",
                "9acacab702acd750"
            ]
        ]
    },
    {
        "id": "b2d2ddc0ae4dc32a",
        "type": "load dataset",
        "z": "45edd55bf12ebbee",
        "name": "Load Testing Data Features",
        "datasetFolder": "C:\\Users\\Kevin Ramirez\\Desktop\\Master's Notes\\Fault Tolerant Systems\\IoT Project\\test2",
        "datasetName": "dataset",
        "partition": "test.csv",
        "input": true,
        "output": false,
        "x": 380,
        "y": 1580,
        "wires": [
            [
                "b02fde3b5b229ff7"
            ],
            [
                "f28acd18feb4f50d"
            ]
        ]
    },
    {
        "id": "9acacab702acd750",
        "type": "load dataset",
        "z": "45edd55bf12ebbee",
        "name": "Load Testing Data Classifications",
        "datasetFolder": "C:\\Users\\Kevin Ramirez\\Desktop\\Master's Notes\\Fault Tolerant Systems\\IoT Project\\test2",
        "datasetName": "dataset",
        "partition": "test.csv",
        "input": false,
        "output": true,
        "x": 400,
        "y": 1400,
        "wires": [
            [
                "938101878df0c0a5"
            ],
            [
                "f28acd18feb4f50d"
            ]
        ]
    },
    {
        "id": "b02fde3b5b229ff7",
        "type": "predictor",
        "z": "45edd55bf12ebbee",
        "name": "Predictor",
        "modelPath": "C:\\Users\\Kevin Ramirez\\Desktop\\Master's Notes\\Fault Tolerant Systems\\IoT Project\\test2\\models",
        "modelName": "dtc.b",
        "x": 360,
        "y": 1520,
        "wires": [
            [
                "938101878df0c0a5",
                "c4a3bfc472bf0933"
            ],
            [
                "f28acd18feb4f50d"
            ]
        ]
    },
    {
        "id": "938101878df0c0a5",
        "type": "assessment",
        "z": "45edd55bf12ebbee",
        "name": "",
        "score": "accuracy_score",
        "x": 390,
        "y": 1460,
        "wires": [
            [
                "c4a3bfc472bf0933"
            ],
            [
                "f28acd18feb4f50d"
            ]
        ]
    },
    {
        "id": "f28acd18feb4f50d",
        "type": "debug",
        "z": "45edd55bf12ebbee",
        "name": "Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1560,
        "wires": []
    },
    {
        "id": "c4a3bfc472bf0933",
        "type": "debug",
        "z": "45edd55bf12ebbee",
        "name": "Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 1420,
        "wires": []
    },
    {
        "id": "73ef5687f81eb3bd",
        "type": "decision tree classifier",
        "z": "45edd55bf12ebbee",
        "name": "Train Decision Tree Classifier",
        "savePath": "C:\\Users\\Kevin Ramirez\\Desktop\\Master's Notes\\Fault Tolerant Systems\\IoT Project\\test2\\models",
        "saveName": "dtc.b",
        "maxDepth": "",
        "criterion": "entropy",
        "splitter": "best",
        "x": 580,
        "y": 1240,
        "wires": [
            [
                "5a50c7c818b3e805"
            ],
            [
                "dcdc50cd381a59ab"
            ]
        ]
    },
    {
        "id": "6cb381f2a7b2c941",
        "type": "function",
        "z": "45edd55bf12ebbee",
        "name": "Neighbor Sensor Data",
        "func": "const AVG_COOLING_BY_CLOUDS = 9;\nconst AVG_SPRING_TEMP = 67;\nconst AVG_SUMMER_TEMP = 83;\nconst AVG_FALL_TEMP = 72;\nconst AVG_WINTER_TEMP = 56\nconst HIGHEST_WIND_SPEED = 6;\nconst MAX_HUMIDITY_EFFECT = 6;\n\nvar updateDoc = {};\nupdateDoc.ID = msg.payload;\nupdateDoc.Temperature = null;\nupdateDoc.Cloudy = Math.random().toFixed(2) * AVG_COOLING_BY_CLOUDS;\nupdateDoc.Season = Math.floor(Math.random() * 4 + 1);\nupdateDoc.Humidity = (Math.random().toFixed(2) * 2 - 1) * MAX_HUMIDITY_EFFECT;\nupdateDoc.WindSpeed = Math.floor(Math.random() * HIGHEST_WIND_SPEED + 1);\nupdateDoc.Date = new Date();\n\nvar currentTemp = 0;\nswitch(updateDoc.Season) {\n    case 1:\n        currentTemp = AVG_SPRING_TEMP;\n        break;\n    case 2:\n        currentTemp = AVG_SUMMER_TEMP;\n        break;\n    case 3:\n        currentTemp = AVG_FALL_TEMP;\n        break;\n    case 4:\n        currentTemp = AVG_WINTER_TEMP;\n        break;\n}\n\ncurrentTemp -= updateDoc.Cloudy;\ncurrentTemp -= updateDoc.WindSpeed;\ncurrentTemp += updateDoc.Humidity;\n\nif(currentTemp < 65) {\n    updateDoc.Temperature = \"COLD\";\n}\nelse if(currentTemp < 77) {\n    updateDoc.Temperature = \"MODERATE\";\n}\nelse {\n    updateDoc.Temperature = \"HOT\";\n}\n\nmsg.payload = [];\nmsg.payload.push(updateDoc);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1700,
        "wires": [
            [
                "e051ce37cd519d7b"
            ]
        ]
    },
    {
        "id": "b5b7664f7cd0e95e",
        "type": "predictor",
        "z": "45edd55bf12ebbee",
        "name": "Predictor",
        "modelPath": "C:\\Users\\Kevin Ramirez\\Desktop\\Master's Notes\\Fault Tolerant Systems\\IoT Project\\test2\\models",
        "modelName": "dtc.b",
        "x": 180,
        "y": 1880,
        "wires": [
            [
                "de63a2019b852d8b"
            ],
            [
                "9ffdda534206b53a"
            ]
        ]
    },
    {
        "id": "de63a2019b852d8b",
        "type": "debug",
        "z": "45edd55bf12ebbee",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 1880,
        "wires": []
    },
    {
        "id": "9ffdda534206b53a",
        "type": "debug",
        "z": "45edd55bf12ebbee",
        "name": "Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 1940,
        "wires": []
    },
    {
        "id": "e051ce37cd519d7b",
        "type": "csv",
        "z": "45edd55bf12ebbee",
        "name": "Create DATA",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "Season,Cloudy,Humidity,WindSpeed,Temperature",
        "skip": "0",
        "strings": false,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 190,
        "y": 1760,
        "wires": [
            [
                "ea8b7a9264f200c3"
            ]
        ]
    },
    {
        "id": "ea8b7a9264f200c3",
        "type": "file",
        "z": "45edd55bf12ebbee",
        "name": "Save DATA as File",
        "filename": "C:\\Users\\Kevin Ramirez\\Desktop\\Master's Notes\\Fault Tolerant Systems\\IoT Project\\test2\\test.csv",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 390,
        "y": 1760,
        "wires": [
            [
                "f4efd709419db68c"
            ]
        ]
    },
    {
        "id": "e2602da761cf99fa",
        "type": "load dataset",
        "z": "45edd55bf12ebbee",
        "name": "",
        "datasetFolder": "C:\\Users\\Kevin Ramirez\\Desktop\\Master's Notes\\Fault Tolerant Systems\\IoT Project",
        "datasetName": "test2",
        "partition": "test.csv",
        "input": true,
        "output": false,
        "x": 350,
        "y": 1820,
        "wires": [
            [
                "b5b7664f7cd0e95e"
            ],
            [
                "9ffdda534206b53a"
            ]
        ]
    },
    {
        "id": "61f189de881f99ec",
        "type": "inject",
        "z": "45edd55bf12ebbee",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 170,
        "y": 1700,
        "wires": [
            [
                "6cb381f2a7b2c941"
            ]
        ]
    },
    {
        "id": "f4efd709419db68c",
        "type": "delay",
        "z": "45edd55bf12ebbee",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 180,
        "y": 1820,
        "wires": [
            [
                "e2602da761cf99fa"
            ]
        ]
    },
    {
        "id": "e88de922c5673edf",
        "type": "mongodb3",
        "uri": "mongodb://localhost:27017/",
        "name": "MongoDB",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "8c62a4edb3fcdfcf",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "test",
        "name": ""
    }
]
